{"version":3,"sources":["Square.jsx","Board.jsx","Game.jsx","index.js"],"names":["Square","props","react_default","a","createElement","className","onClick","value","calculateWinner","squares","lines","i","length","_lines$i","Object","slicedToArray","b","c","Board","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","Array","fill","xIsNext","slice","setState","_this2","src_Square","handleClick","status","winner","renderSquare","React","Component","Game","src_Board_0","ReactDOM","render","src_Game_0","document","getElementById"],"mappings":"wSAWeA,MARf,SAAgBC,GACZ,OACIC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASC,QAASL,EAAMK,SACrCL,EAAMM,cC4DnB,SAASC,EAAgBC,GAWrB,IAVA,IAAMC,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,KAAAE,EAAAC,OAAAC,EAAA,EAAAD,CACjBJ,EAAMC,GADW,GAC5BR,EAD4BU,EAAA,GACzBG,EADyBH,EAAA,GACtBI,EADsBJ,EAAA,GAEnC,GAAIJ,EAAQN,IAAMM,EAAQN,KAAOM,EAAQO,IAAMP,EAAQN,KAAOM,EAAQQ,GAClE,OAAOR,EAAQN,GAGvB,OAAO,KAGIe,kBAjFX,SAAAA,EAAYjB,GAAO,IAAAkB,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAAH,IACfC,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAAI,GAAAM,KAAAH,KAAMpB,KACDwB,MAAQ,CACThB,QAASiB,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJET,2EAQPR,GACR,IAAMF,EAAUY,KAAKI,MAAMhB,QAAQoB,QAC/BrB,EAAgBC,IAAYA,EAAQE,KAGxCF,EAAQE,GAAKU,KAAKI,MAAMG,QAAU,IAAM,IACxCP,KAAKS,SAAS,CACVrB,QAASA,EACTmB,SAAUP,KAAKI,MAAMG,gDAIhBjB,GAAG,IAAAoB,EAAAV,KACZ,OACInB,EAAAC,EAAAC,cAAC4B,EAAD,CACIzB,MAAOc,KAAKI,MAAMhB,QAAQE,GAC1BL,QAAS,kBAAMyB,EAAKE,YAAYtB,uCAMxC,IACIuB,EADEC,EAAS3B,EAAgBa,KAAKI,MAAMhB,SAQ1C,OALIyB,EADAC,EACS,8CAAaA,EAEb,+EAAqBd,KAAKI,MAAMG,QAAU,IAAM,KAIzD1B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAU6B,GACzBhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVgB,KAAKe,aAAa,GAClBf,KAAKe,aAAa,GAClBf,KAAKe,aAAa,IAEvBlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVgB,KAAKe,aAAa,GAClBf,KAAKe,aAAa,GAClBf,KAAKe,aAAa,IAEvBlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVgB,KAAKe,aAAa,GAClBf,KAAKe,aAAa,GAClBf,KAAKe,aAAa,YAvDfC,IAAMC,WCgBXC,0LAdP,OACIrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACoC,EAAD,OAEJtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,oBATGiC,IAAMC,kBCCzBG,IAASC,OACLxC,EAAAC,EAAAC,cAACuC,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.39702ddc.chunk.js","sourcesContent":["import React from 'react';\nimport './Square.css';\n\nfunction Square(props) {\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\nexport default Square;","import React from 'react';\nimport Square from './Square';\nimport './Board.css';\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            squares: Array(9).fill(null),\n            xIsNext: true,\n        };\n    }\n\n    handleClick(i) {\n        const squares = this.state.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            squares: squares,\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n\n    renderSquare(i) {\n        return (\n            <Square\n                value={this.state.squares[i]}\n                onClick={() => this.handleClick(i)}\n            />\n        );\n    }\n  \n    render() {\n        const winner = calculateWinner(this.state.squares);\n        let status;\n        if (winner) {\n            status = 'Выиграл ' + winner;\n        } else {\n            status = 'Следующий ход: ' + (this.state.xIsNext ? 'X' : 'O')\n        }\n    \n        return (\n            <div>\n            <div className=\"status\">{status}</div>\n            <div className=\"board-row\">\n                {this.renderSquare(0)}\n                {this.renderSquare(1)}\n                {this.renderSquare(2)}\n            </div>\n            <div className=\"board-row\">\n                {this.renderSquare(3)}\n                {this.renderSquare(4)}\n                {this.renderSquare(5)}\n            </div>\n            <div className=\"board-row\">\n                {this.renderSquare(6)}\n                {this.renderSquare(7)}\n                {this.renderSquare(8)}\n            </div>\n            </div>\n        );\n    }\n}\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}\n\nexport default Board;","import React from 'react';\nimport Board from './Board';\nimport './Game.css';\n\nclass Game extends React.Component {\n    render() {\n        return (\n            <div className=\"game\">\n            <div className=\"game-board\">\n                <Board />\n            </div>\n            <div className=\"game-info\">\n                <div>{/* status */}</div>\n                <ol>{/* TODO */}</ol>\n            </div>\n            </div>\n        );\n    }\n}\n\nexport default Game;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './Game';\nimport './index.css';\n  \nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n  "],"sourceRoot":""}